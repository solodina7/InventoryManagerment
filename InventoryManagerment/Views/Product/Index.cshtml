@using PagedList;
@using PagedList.Mvc;
@using InventoryManagerment.Common;
@model IPagedList<InventoryManagerment.Models.EF.Product>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categoryList = (IPagedList<InventoryManagerment.Models.EF.ProductCategory>)ViewBag.ListProductCategory;
    var db = new InventoryManagerment.Models.EF.InventoryDbContext();
    string GetCategoryName(long? id = null)
    {
        if (id.HasValue)
        {
            var category = db.ProductCategories.Find(id);
            if (category != null)
            {
                return category.Name;
            }
            else { return ""; }

        }
        else
        {
            return "";
        }
    }
    string GetUnitName(long? id = null)
    {
        if (id.HasValue)
        {
            var category = db.Units.Find(id);
            if (category != null)
            {
                return category.Name;
            }
            else { return ""; }

        }
        else
        {
            return "";
        }

    }
    string GetPackageName(long? id = null)
    {
        if (id.HasValue)
        {
            var category = db.Packages.Find(id);
            if (category != null)
            {
                return category.Name;
            }
            else { return ""; }

        }
        else
        {
            return "";
        }

    }
}
<div class="row" id="productList">
    <div class="col-12">
        <div class="card my-4">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                <div class="row bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
                    <div class="col-6">
                        <h6 class="mb-0 text-white text-capitalize ps-3">Danh sách sản phẩm</h6>
                    </div>
                    <div class="col-6 text-end">
                        <a class="btn bg-gradient-dark mb-0 text-white text-capitalize" data-bs-toggle="modal" data-bs-target="#searchModal"><i class="material-icons">search</i></a>
                        <a class="btn bg-gradient-dark mb-0 text-white text-capitalize" href="../Product/Create"><i class="material-icons text-sm">add</i></a>
                    </div>
                </div>
            </div>
            <div class="card-body px-0 pb-2">
                <div class="px-2 mb-1">                  
                    <!-- Modal -->
                    <div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="searchtitleModal" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title font-weight-normal" id="searchtitleModal">Tìm kiếm sản phẩm</h5>
                                    <button type="button" class="btn-close text-dark" data-bs-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    @using (Html.BeginForm("Index", "Product", method: FormMethod.Get))
                                    {
                                    <div class="input-group mb-3">
                                        <div class="input-group input-group-static mb-4">
                                            <input placeholder="Nhập tên sản phẩm" type="text" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)" value="@ViewBag.searchString" name="searchString">
                                        </div>
                                        <div class="input-group input-group-static mb-4">
                                            <label for="ActionKey" class="ms-0">Loại Sản Phẩm</label>
                                            <select class="form-control" name="typeProduct" id="typeProduct" value="@ViewBag.typeProduct">
                                                <option value="0">Tất cả</option>
                                                @foreach (var item in db.ProductCategories.ToList())
                                                {
                                                    <option value="@item.ID">@item.Name</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="input-group input-group-static mb-4">
                                            <select name="pageSize" class="form-control">
                                                <option value="10">Số dòng hiển thị</option>
                                                @for (int a = 15; a <= 100; a += 5)
                                                {
                                                    <option value="@a">@a</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                        <button id="btnSearch" type="submit" class="btn btn-icon btn-3 btn-outline-primary input-group-outline input-group-text">
                                            <span class="btn-inner--icon"><i class="material-icons">search</i></span>
                                            <span class="btn-inner--text">Tìm kiếm</span>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-responsive p-0">
                    <table class="table align-items-center mb-0" id="tbl_Product">
                        <thead>
                            <tr>
                                <th class="text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Tên sản phẩm</th>
                                <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Đơn vị tính</th>
                                <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Giá bán</th>
                                <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Đóng gói</th>
                                <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Số lượng tối thiểu</th>
                                <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Tùy chọn</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr id="row_@item.ID">
                                    <td>
                                        <div class="d-flex px-2 py-1">
                                            <div class="d-flex flex-column justify-content-center">
                                                <h6 class="mb-0 text-sm">@item.Name</h6>
                                                @if (item.CategoryID.HasValue)
                                                {
                                                    <p class="text-xs text-secondary mb-0">@GetCategoryName(item.CategoryID)</p>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="text-secondary text-xs font-weight-bold">@GetUnitName(item.UnitID)</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="text-secondary text-xs font-weight-bold">@Functions.NumberToMoney(item.Price.ToString()) VNĐ</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="text-secondary text-xs font-weight-bold">@GetPackageName(item.PackageID)</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="text-secondary text-xs font-weight-bold">@item.QuantityAlert</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <a href="/Product/EditProduct/@item.ID"><i class="material-icons">edit_note</i></a>
                                        <a class="delete" href="javascript:;" id="@item.ID"><i class="material-icons">delete</i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div style="text-align:center">
                        <div style="display:inline-block" id="listPaginationProduct">
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchProductString = ViewBag.searchProductString,pageSize = ViewBag.pageSize }))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section jsFooter{
    <script>
        $(document).ready(function () {          
            $('#tbl_Product tbody  tr td .delete').click(function () {
                var id = $(this).attr('id');
                $.confirm({
                    title: 'Thông báo',
                    content: 'Bạn có chắc muốn xóa sản phẩm này ?',
                    buttons: {
                        confirm:
                        {
                            text: 'Đồng ý',
                            key: ['enter'],
                            action: function () {
                                var row = '#row_' + id;
                                $.ajax({
                                    type: "POST",
                                    url: "/Product/DeleteProduct/",
                                    data: JSON.stringify({ id: id }),
                                    contentType: "application/json; charset=utf8",
                                    success: function () {
                                        $(row).remove();
                                        var obj = $.alert({
                                            title: 'Thông báo',
                                            content: 'Xóa thành công',
                                        });
                                        setTimeout(function () {
                                            obj.close();
                                        }, 1500);
                                    },
                                    error: function () {
                                        $.alert('Xóa thất bại');
                                    }
                                });
                            }
                        },
                        cancel: {
                            text: 'Hủy',
                            action: function () {
                            }
                        }
                    }
                });
            });
        });

        function addClasslist() {
            $('#listPaginationProduct ul li').each(function () {
                $(this).addClass('page-item');
                $(this).find('a').addClass('page-link')
            });
        }
        addClasslist();
    </script>
}